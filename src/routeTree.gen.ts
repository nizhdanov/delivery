/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WrapperImport } from './routes/_wrapper'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as WrapperOrderImport } from './routes/_wrapper.order'

// Create Virtual Routes

const WrapperSigninLazyImport = createFileRoute('/_wrapper/signin')()
const LayoutProfileLazyImport = createFileRoute('/_layout/profile')()
const LayoutHistoryLazyImport = createFileRoute('/_layout/history')()

// Create/Update Routes

const WrapperRoute = WrapperImport.update({
  id: '/_wrapper',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const WrapperSigninLazyRoute = WrapperSigninLazyImport.update({
  path: '/signin',
  getParentRoute: () => WrapperRoute,
} as any).lazy(() =>
  import('./routes/_wrapper.signin.lazy').then((d) => d.Route),
)

const LayoutProfileLazyRoute = LayoutProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.profile.lazy').then((d) => d.Route),
)

const LayoutHistoryLazyRoute = LayoutHistoryLazyImport.update({
  path: '/history',
  getParentRoute: () => LayoutRoute,
} as any).lazy(() =>
  import('./routes/_layout.history.lazy').then((d) => d.Route),
)

const WrapperOrderRoute = WrapperOrderImport.update({
  path: '/order',
  getParentRoute: () => WrapperRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_wrapper': {
      preLoaderRoute: typeof WrapperImport
      parentRoute: typeof rootRoute
    }
    '/_wrapper/order': {
      preLoaderRoute: typeof WrapperOrderImport
      parentRoute: typeof WrapperImport
    }
    '/_layout/history': {
      preLoaderRoute: typeof LayoutHistoryLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/profile': {
      preLoaderRoute: typeof LayoutProfileLazyImport
      parentRoute: typeof LayoutImport
    }
    '/_wrapper/signin': {
      preLoaderRoute: typeof WrapperSigninLazyImport
      parentRoute: typeof WrapperImport
    }
    '/_layout/': {
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  LayoutRoute.addChildren([
    LayoutHistoryLazyRoute,
    LayoutProfileLazyRoute,
    LayoutIndexRoute,
  ]),
  WrapperRoute.addChildren([WrapperOrderRoute, WrapperSigninLazyRoute]),
])

/* prettier-ignore-end */
